#!/bin/sh
set -e

__compose_includes() {
    local include_files="<%= @assets.include_files %>"
    if [ -z "$include_files" ]; then
        return
    fi

    echo "<%= @assets.include_files %>" | tr ' ' '\n' | sed 's/^/--file /' | tr '\n' ' '
}

__resolve_path() {
    local file="$1"
    if [ ! -L "$file" ]; then
        echo "$file"
        return
    fi

    local resolved_file
    resolved_file=$(readlink -m "$file")
    local relative_file
    relative_file=$(realpath --relative-to="<%= @assets.git_dir %>" "$resolved_file")
    echo "$relative_file"
}

fetch_diff_stack() {
  cd "<%= @assets.git_dir %>" >/dev/null
  git fetch origin "<%= @stack.git_reference %>"
  git diff --name-only FETCH_HEAD || exit 0
  cd - >/dev/null
}

has_changed_stack() {
  cd "<%= @assets.git_dir %>" >/dev/null

  local has_changes="false"
  for file in $(git diff --name-only FETCH_HEAD); do
      resolved=$(__resolve_path "<%= @stack.compose_file %>")
      if [ "$file" = "$resolved" ]; then
              has_changes="true"
              break
      fi

      local include_files="<%= @assets.include_files %>"
      if [ -z "$include_files" ]; then
        continue
      fi

      OIFS=$IFS
      IFS=' '
      for include in $include_files; do
        resolved=$(__resolve_path "$include")
        if [ "$file" = "$resolved" ]; then
            has_changes="true"
            break
        fi
      done
      IFS=$OIFS
  done

  if [ "$has_changes" = "false" ]; then
    exit 0
  fi

  cd - >/dev/null
}

stop_remove_stack() {
  if [ ! -d "<%= @assets.git_dir %>" ]; then
    return
  fi

  cd "<%= @assets.git_dir %>" >/dev/null

  local files
  files=$(__compose_includes)

  sudo docker --log-level error \
    compose --progress plain \
    --file "<%= @stack.compose_file %>" $files \
    --env-file "<%= @assets.env_file %>" \
    down || true

  cd - >/dev/null
}

create_start_stack() {
  cd "<%= @assets.git_dir %>" >/dev/null

  git merge FETCH_HEAD

  local files
  files=$(__compose_includes)

  sudo docker --log-level error \
    compose --progress plain \
    --file "<%= @stack.compose_file %>" $files \
    --env-file "<%= @assets.env_file %>" \
    up --detach

  cd - >/dev/null
}

fetch_diff_stack
has_changed_stack
stop_remove_stack
create_start_stack

# vim: set ft=sh :
